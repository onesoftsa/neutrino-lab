# automatically generated by the FlatBuffers compiler, do not modify

# namespace: quantick

import numpy as np


class Indicator(object):

    @classmethod
    def GetRootAsIndicator(cls, buf, offset):
        n = 0
        x = Indicator()
        x.Init(buf, n + offset)
        return x

    # Indicator
    def Init(self, buf, pos):
        # include just one datapoint by objet. This datapoint can have 1~3
        # dimensions
        if isinstance(buf, np.ndarray):
            self._tab = buf
        else:
            self._tab = [buf]

    # Indicator
    def Indicator(self, j):
        return self._tab[j]

    # Indicator
    def IndicatorAsNumpy(self):
        return np.array(self._tab)

    # Indicator
    def IndicatorLength(self):
        return len(self._tab)
