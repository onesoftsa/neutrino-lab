Env:
  foo: "[<METHOD NAME>]<CLASS NAME>: <TXT>"
  symbol: "[symbolsLoaded]Environment: %s"
  fill: "[orderFilled]Environment: time={}, exec {} from order {} in {} @ {} {}\n"
  order: "[orderUpdated]Environment: order({},{})={}"
  ord1: ", secid={}, status={}"
  ord2: ", rejection msg: {}"
  mktfeed: "[lostMarketFeed]Environment: callback processed"
  errsbc: "[subscribe]Environment: %s not in conf file"
  errsbc2: "[subscribe]Environment: %s type not available"
  pingok: "[update_emptysettingctrl]Environment: New ping"
  pingfault: "[update_emptysettingctrl]Environment: quitting. No pings in 15 min"
  pquit: "[processQuit]Environment: callback processed"
  offline1: "[is_offline]Environment: The strategy is offline"
  errwraper: "[ensure_no_double_wrap]AgentWrapper: Attempted to double wrap with Wrapper: {}"
  errcreateorder: "[createorder]OrderHandler: order ID already included"
  createorder: "[createorder]OrderHandler: time={}, order({},{})={}, qty {} @ {}"
  modify: "[modify_order]OrderHandler: time={}, order({},{})={}, qty {} @ {}"
  cancel: "[cancel_order]OrderHandler: time={}, order({},{})={}"
  errparms: "[process_parameters]OrderHandler: it should be a price: {}"
  position: "[set_initial_positions]Instrument: new position set: {}{}"
Agent:
  symbol: "[symbolsLoaded]Agent: %s"
  fill: "[orderFilled]Agent: time={}, exec {} from order {} in {} @ {} {}\n"
  order: "[orderUpdated]Agent: order({},{})={}"
  ord1: ", secid={}, status={}"
  ord2: ", rejection msg: {}"
  mktfeed: "[lostMarketFeed]Agent: callback processed"
  errsbc: "[subscribe]Agent: %s not in conf file"
  errsbc2: "[subscribe]Agent: %s type not available"
  pingok: "[update_emptysettingctrl]Agent: New ping"
  pingfault: "[update_emptysettingctrl]Agent: quitting. No pings in 15 min"
  pquit: "[processQuit]Agent: callback processed"
  offline1: "[is_offline]Agent: The strategy is offline"
  errwraper: "[ensure_no_double_wrap]AgentWrapper: Attempted to double wrap with Wrapper: {}"
  errcreateorder: "[createorder]OrderHandler: order ID already included"
  createorder: "[createorder]OrderHandler: time={}, order({},{})={}, qty {} @ {}"
  modify: "[modify_order]OrderHandler: time={}, order({},{})={}, qty {} @ {}"
  cancel: "[cancel_order]OrderHandler: time={}, order({},{})={}"
  errparms: "[process_parameters]OrderHandler: it should be a price: {}"
  position: "[set_initial_positions]Instrument: new position set: {}{}"
